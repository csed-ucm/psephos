name: Release Package

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: arc-runner-k8s
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11'] 
        node-version: [18.x] 
        mongodb-version: ['6.0'] 
    steps:
      - name: Force Install GIT latest
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:git-core/ppa
          sudo apt-get update
          sudo apt-get install -y git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions --root-user-action=ignore
      - name: Test with tox
        run: |
          tox run
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov
  release:
    runs-on: arc-runner-k8s
    needs: test
    concurrency: release
    permissions:
      id-token: write
      contents: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
    - name: Force Install GIT latest
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get update
        sudo apt-get install -y git
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: release
      name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: "patch"
    - name: Debug release
      run: |
        echo "Released: ${{ steps.release.outputs.released }}"
        echo "Version: ${{ steps.release.outputs.version }}"
        echo "Tag: ${{ steps.release.outputs.tag }}"
    - name: Publish package to GitHub Release
      uses: python-semantic-release/upload-to-gh-release@main
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
  docker:
    needs: release
    runs-on: arc-runner-k8s
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Context for Buildx
      id: buildx-context
      run: |
        docker context create builders
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: unipoll/api:${{ needs.release.outputs.version }}, unipoll/api:latest