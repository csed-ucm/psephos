name: Release Package

on:
  workflow_dispatch:

jobs:
  release:
    name: Release Package to GitHub
    runs-on: arc-runner-k8s
    concurrency: release
    permissions:
      id-token: write
      contents: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
    - name: Force Install GIT latest
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get update
        sudo apt-get install -y git
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - id: release
      name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish package to GitHub Release
      uses: python-semantic-release/upload-to-gh-release@main
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
  docker:
    name: Build and push Docker image
    needs: release
    runs-on: arc-runner-k8s
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Context for Buildx
      id: buildx-context
      run: |
        docker context create builders
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: unipoll/api:${{ needs.release.outputs.version }}, unipoll/api:latest
  pypi:
    name: Publish to PyPI
    needs: release
    # This action is not supported on self-hosted runners
    # runs-on: arc-runner-k8s
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    environment:
      name: pypi
      url: https://pypi.org/p/unipoll-api
    permissions:
      id-token: write
    steps:
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python-version}}
    - name: Install dependencies
      run: |
        python -m pip install build
    - name: Download source code
      uses: actions/checkout@v3
      with:
        ref: main
    - name: Build package distributions
      run: |
        python -m build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: needs.release.outputs.released == 'true'