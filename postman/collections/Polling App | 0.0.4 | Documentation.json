{
	"info": {
		"_postman_id": "83cda16b-c29c-495b-a867-5709ca7883d4",
		"name": "Polling App | 0.0.4 | Documentation",
		"description": "A REST API to manage users and polls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19614303-83cda16b-c29c-495b-a867-5709ca7883d4"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "{group_id}",
					"item": [
						{
							"name": "members",
							"item": [
								{
									"name": "Get Group Members",
									"id": "4cc7c853-8b45-402b-9095-a61c7fc290c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "cddacb2e-488b-4413-9cfe-8c69d777b71f",
											"name": "Get group members",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
										},
										{
											"id": "9bda4720-9b48-4e00-ad62-a88b99f5966f",
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "556aa9fd-39da-4a0d-b6ce-89d02bf3e8aa",
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add User To Group",
									"id": "5ec66581-f645-409c-8e57-2594be9b62ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Add member(s) to a group. The front-end application must do validation to ensure that the user exists in the database and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\nThe function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
									},
									"response": [
										{
											"id": "d8adc3a9-90ff-40eb-915a-3403b9a00e79",
											"name": "Add user(s) to a group",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"user1@example.com\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"user2@example.com\",\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "2f984896-0a5c-465c-98d5-124839278b15",
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"user1@example.com\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"user2@example.com\",\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "4a4d8dbf-04ae-4c5a-90bf-618a32aa32b7",
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"user1@example.com\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"user2@example.com\",\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "11c2f02e-a830-470a-b7b7-e95ec05fc05b"
						},
						{
							"name": "Get Group",
							"id": "f9c8f95e-c965-4185-9f1f-0433c189c0d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "9a6a872a-72ee-41ac-b7d8-48c172d1dada",
									"name": "Get group by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"incididunt reprehenderit\",\n  \"description\": \"amet laboris ut ullamco fugiat\",\n  \"owner_name\": \"consequat dolore\",\n  \"owner_email\": \"Tm8LJgryo@BCPLboBYFGg.qs\"\n}"
								},
								{
									"id": "886d696d-14a9-4e93-ac70-885e0eb43f7b",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "379512e9-3043-4dde-8e67-87bc64b7bdb7",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Group",
							"id": "d16b9580-8619-401d-a88a-21c08acd9f84",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "4dc30581-ed91-4533-af43-adec9af408a2",
									"name": "Delete group",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "8cc1720d-04e7-4323-8ce2-69f2d8ced897",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "516a3c30-a265-4b93-8235-4626621b0a2e",
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Owner",
							"id": "7fe387a1-48ed-4b1b-bea4-e64e6a4a12ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"owner"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "fdc746f2-052b-41b7-9dca-97b8ada0b7e6",
									"name": "Get group owner",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"P4ApgZjeGO3Je8@ksbHeethodQVUEyChXPLHtpQ.gco\",\n  \"first_name\": \"ex\",\n  \"last_name\": \"laborum culpa anim adipisicing\"\n}"
								},
								{
									"id": "5d08fecb-c1e1-4d7e-9e4a-dc529eebf636",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2142b7b8-a8a8-442f-9d8e-81ea21dc2185",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Admins",
							"id": "515122a5-6a1e-4e92-b241-91bf870871be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/admins/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"admins",
										""
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "b05b3d8a-df3c-47a6-9d6a-4cfea7ba27ee",
									"name": "Get list of group administrators",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "f6a832a8-2546-4edb-94f5-dde8757b308a",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "886b30da-c270-493a-ae1a-972bae40d00e",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Users",
							"id": "cf3ac1d9-e5ca-49f2-9d3c-989318b3633c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"users"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "315fb96e-83de-427d-8e85-25320c575e6d",
									"name": "Get group members",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "2186f60e-6bf4-4c44-9c01-c856f0d149ba",
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "e71a1b8e-e848-4544-b2f9-e7dd9f7de3cd",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Remove User",
							"id": "7dcb6016-620a-48c4-a4a6-eb9af723f75a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/member/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"member",
										":email"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "64ab62a4-1225-41ef-9d85-c2c97929302d",
									"name": "Remove a member from a group",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":email"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "8ac1c9b2-2d2e-4fdc-8e79-6389582327c1",
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":email"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "de71c2df-0b4e-47b6-bd1a-b8f8740e554d",
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":email"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "f76e3ec0-d48e-4672-ac68-4f7b466fcdbc"
				},
				{
					"name": "List Groups",
					"id": "6a865b21-4f09-478f-badf-cf51e2276c78",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							],
							"query": [
								{
									"key": "group_name",
									"value": "<string>"
								},
								{
									"key": "member_data",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "8cba1002-e4db-4085-ad24-2f1c601ad7e8",
							"name": "List all groups",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "e1493f78-efb4-4e74-8258-7ef60a6cc92e",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "50a9edad-d4de-43b2-aef0-c213245e30ef",
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"dolor ad\",\n        \"mollit cillum officia\"\n      ],\n      \"msg\": \"est consectetur aute veniam\",\n      \"type\": \"amet reprehenderit tempor irure nisi\"\n    },\n    {\n      \"loc\": [\n        \"pariatur Duis ex \",\n        \"reprehenderit laborum ut\"\n      ],\n      \"msg\": \"ea\",\n      \"type\": \"qui\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Group",
					"id": "3fdcacd2-57bc-4d5d-a27f-cede45f956ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							]
						}
					},
					"response": [
						{
							"id": "039c0746-8907-4674-8327-7b4d6081dded",
							"name": "Create new group",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Group 01\",\n  \"description\": \"My first Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"aute Exce\",\n  \"name\": \"in culpa cillum ut\",\n  \"message\": \"Group created successfully\"\n}"
						},
						{
							"id": "b46a9977-a9b8-4cd0-88ed-7c153162fb7a",
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Group 01\",\n  \"description\": \"My first Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "c6248a54-ea88-4c6f-af79-bc3b9852040d",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Group 01\",\n  \"description\": \"My first Group\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Group",
					"id": "d3315db2-ed8c-4b23-9107-2c1c09006bd5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"id": "61441421-cdf5-4c1a-bff2-b23c8b7d2fd0",
							"name": "Update a group",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"laboris laborum consequat in\""
						},
						{
							"id": "4b7dfe82-3bbc-4f26-8522-81d0984295ab",
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "00eb9d1e-9c43-4cce-95d0-eb11f3c71390",
							"name": "Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"\",\n  \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "e823a319-f790-4d08-94cb-753bf669e74e"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "me",
					"item": [
						{
							"name": "Users:Current User",
							"id": "7bbc36e9-19ea-49d2-b97d-6d95a25f6603",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "cef7592a-aeaf-430d-ac5e-c2cb5a90cd83",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "af11ba73-c6c7-457b-9aab-07925fd42222",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Users:Patch Current User",
							"id": "36dab0d8-8ca8-4bc4-8efd-d071de826c85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "71ba4436-c653-4a8a-ae83-e117da851ea4",
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "0840d186-9fcd-4d44-84b3-718ebe24ef5e",
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "722a0c08-d538-4ed7-9519-1c2be46254aa",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ace2d3cd-6d87-4883-bf6b-a0ccc8115d0c",
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "dc8b5a5e-2c25-4b36-9ef3-f55d23534df5"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Users:User",
							"id": "cc8beec2-75e3-403f-9672-2d9e6899b06d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "6dc2121f-9d9e-4f08-ae57-115823ae3d21",
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "bd53bd09-5a0d-4ba5-8631-ec7a604d764d",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "452ab7b9-d94e-4742-900a-e87e771eb787",
									"name": "Not a superuser.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ebf1c0e0-888f-451f-9079-3705a673c580",
									"name": "The user does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "93d3bede-5ccd-421d-9e4d-8c07785c15a5",
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Delete User",
							"id": "c479930d-582a-422b-8f3a-c9bec74d9ef4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "3bf2e2ab-9558-4ba5-a4ff-f2f820e296e4",
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7a0413d1-0ebc-4a68-bbdd-25cd882d8d47",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "e8d20ed6-7091-471d-b948-2f53a778309c",
									"name": "Not a superuser.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2065cd7d-659b-4597-acd0-976ed6ea4a50",
									"name": "The user does not exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0ec036c7-9581-4773-bb10-a10eab481e41",
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Patch User",
							"id": "c4d9cae6-78ee-4851-a7f5-5addf574554b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "23cbbf02-f758-463b-9a45-888a026452f3",
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "f74a2a85-b8f6-4ace-94e4-6ee907198788",
									"name": "Bad Request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "3f74178e-b31b-4698-8d8f-42c858a39146",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2fd4691a-809e-4a07-b8c8-aa4bf0a50b29",
									"name": "Not a superuser.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "615e7bbd-76a5-48a9-b1aa-a7f3f3847ef3",
									"name": "The user does not exist.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "039a70c9-a64f-43e0-832a-661cf75b1cd0",
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "d0a5273c-3d5d-4de1-b4e4-605f2136fd17"
				},
				{
					"name": "List User Groups",
					"id": "ba94d84b-1df8-4c65-a299-166f668c5f84",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/groups?user_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"groups"
							],
							"query": [
								{
									"key": "user_id",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "1f8f4b7e-fead-41cc-a59a-c207f715b851",
							"name": "List all groups that a user is a member of",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups?user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "0d7412a7-3e97-452a-946d-dcbf7914b450",
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups?user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "441b0338-e52e-4790-b3b6-8d298e6fbe49",
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups?user_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									],
									"query": [
										{
											"key": "user_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "1b40cd51-561a-4b03-a13d-88d551659cea"
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "jwt",
					"item": [
						{
							"name": "Auth:Jwt.Login",
							"id": "75f94a9b-4cc8-4902-b6c8-dc313a7eb7a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "grant_type",
											"value": "<string>"
										},
										{
											"key": "scope",
											"value": ""
										},
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "client_secret",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"login"
									]
								}
							},
							"response": [
								{
									"id": "a68699a4-8626-4554-8a1d-c41f828dc124",
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI\",\n  \"token_type\": \"bearer\"\n}"
								},
								{
									"id": "0f5a2735-8ae7-4bd4-a924-8f43e1de3c77",
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"LOGIN_BAD_CREDENTIALS\"\n}"
								},
								{
									"id": "3f211232-809d-4ec1-bc27-7dedec376e41",
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Auth:Jwt.Logout",
							"id": "cdf5c672-1872-4f15-ad00-99a82ec9dcd1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"logout"
									]
								}
							},
							"response": [
								{
									"id": "6949138f-440c-436b-bf18-ff619cf84678",
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "a4bbcb13-3a8e-4f7e-b41b-4cd4cc9fb324",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "90110b90-6776-439a-b344-dd98b3a5d3ed"
				},
				{
					"name": "Register:Register",
					"id": "9f5d556d-8296-439f-ae2f-744c63570161",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false,\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"id": "4993a10e-04b9-4a07-aedb-2e415150bfdd",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"pass1234\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "6370c7cb-dda0-44c8-8d44-cd66ea19620c",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"pass1234\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"REGISTER_USER_ALREADY_EXISTS\"\n}"
						},
						{
							"id": "80fadaee-e4dc-4972-9679-20e7307b2527",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"pass1234\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Forgot Password",
					"id": "603e4c35-8985-4ec7-b4c4-e9d63c576a5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"response": [
						{
							"id": "32bc0e62-214b-4471-8037-a855f255efc7",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "4d1a331e-04eb-4ca9-a9f7-8847acac45f7",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Reset Password",
					"id": "3d8a20d7-b93e-4877-8cd6-b9bd75e9c92e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"response": [
						{
							"id": "faf47ab6-bbdc-4017-ae8c-ab943071301a",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "0c4172c8-1187-4d31-a304-c57ea3ff1328",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"RESET_PASSWORD_BAD_TOKEN\"\n}"
						},
						{
							"id": "a9b6de29-fedc-4879-aa88-4f580bbea560",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Request-Token",
					"id": "5fb639bc-c36d-479b-885d-c2c93c643665",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/request-verify-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"request-verify-token"
							]
						}
					},
					"response": [
						{
							"id": "2464ab12-daf7-410d-8e5d-3773c8ae9e14",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "2d3be49a-9996-42ef-85db-b584ab390760",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Verify",
					"id": "cca3e851-6622-4660-85ee-a512e651553d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"verify"
							]
						}
					},
					"response": [
						{
							"id": "14fa1e76-8fad-4b04-b9fc-d67c31dbcc95",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"email\": \"KySeg@IJkYDACiXLckLtGoaOzQAJfjFhp.amt\",\n  \"first_name\": \"aliquip Lorem do\",\n  \"last_name\": \"dolore adipisicing nulla\",\n  \"id\": {},\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "69d37779-0eb7-463f-bfda-13b97164a428",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"VERIFY_USER_BAD_TOKEN\"\n}"
						},
						{
							"id": "d89b59b9-1fd2-477d-8453-2ebd3f3d60e2",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"non id commodo reprehenderit\",\n        \"est qui sed\"\n      ],\n      \"msg\": \"dolore et magna sint\",\n      \"type\": \"nisi Ut\"\n    },\n    {\n      \"loc\": [\n        \"sed eu dolor\",\n        \"cillum quis sit mollit\"\n      ],\n      \"msg\": \"ullamco con\",\n      \"type\": \"dolor aliqua dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "c7e2bd96-1263-46e1-811b-3c50ea76d4ef"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f89c7617-63e9-4a00-9af2-ec80524ed2a1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8feff6aa-c7e9-471e-a500-fd00e11b7495",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f6afbd3a-7c68-40ee-93e3-611eb7c8a532",
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}