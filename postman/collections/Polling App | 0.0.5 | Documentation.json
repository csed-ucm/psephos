{
	"info": {
		"_postman_id": "c49861c3-7c54-4148-85a5-29f65db9a4a3",
		"name": "Polling App | 0.0.5 | Documentation",
		"description": "A REST API to manage users and polls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19614303-c49861c3-7c54-4148-85a5-29f65db9a4a3"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "{group_id}",
					"item": [
						{
							"name": "members",
							"item": [
								{
									"name": "Get Group Members",
									"id": "6022863c-bccb-480f-86c7-e2390a180e96",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
									},
									"response": [
										{
											"id": "e70720ed-3d9d-4e84-a8bc-762aae779fcc",
											"name": "Get group members",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
										},
										{
											"id": "5617dc07-cb6a-4ca0-9c0b-e3ecea6736a6",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "eb859def-66ec-418d-a6b0-67dabd537bdf",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add User To Group",
									"id": "1ce68dbb-95dc-4fa4-aa00-665a14a1a131",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
									},
									"response": [
										{
											"id": "5ca2f271-5421-4b3a-b203-079756c8e741",
											"name": "Add user(s) to a group",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "367bc5e5-bb5d-4824-a17d-cfbb0d293011",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "9a47b980-dc8e-4e0a-bccb-e0825aa6a46d",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "3b729918-4f73-4833-ac87-eb16394ab3d2"
						},
						{
							"name": "member/{user_id}",
							"item": [
								{
									"name": "Get Member Details",
									"id": "043600fd-8ac8-47bf-b108-bc7fcddc2e9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
									},
									"response": [
										{
											"id": "3b8c1cf3-cafc-4680-9f6f-fdbad029df51",
											"name": "Get member details",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "4bc25fc0-7460-4d3f-a26d-c1bce5b506f7",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "32b1c195-e5e0-49a9-8428-f5e2bbdab6c6",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove Member",
									"id": "587eb2a8-1741-48e9-81f8-f8fb4915c0ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
									},
									"response": [
										{
											"id": "1610b822-9756-4d46-9dd6-44cb078c4516",
											"name": "Remove a member from a group",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "86944d20-3dee-4505-a244-c1d0ea15f060",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "160244e6-4ce4-4baa-8713-7b05dd7251f3",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Promote User",
									"id": "e428033a-01be-4a2f-bc7f-a3b982f78a74",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
									},
									"response": [
										{
											"id": "4b366e1e-5076-44e7-ba30-446e2c0dca15",
											"name": "Promote a member to admin",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "6d3ee844-5714-4a59-9dcf-d8525f6cb1ad",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "1d60d333-4290-4c6c-ad56-804934b4e45b",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "9a637a6f-eb88-4ff5-bb22-0fff1c4701de"
						},
						{
							"name": "Get Group",
							"id": "6e7038c3-4d26-44d9-be81-cd501bd85c9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
							},
							"response": [
								{
									"id": "2595b00d-7762-44b2-9745-bd16898bbec2",
									"name": "Get group by id",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Example Group\",\n  \"description\": \"This is an example group\",\n  \"owner_name\": \"John Doe\",\n  \"owner_email\": \"jdoe@example.com\"\n}"
								},
								{
									"id": "bc4bd680-f1d5-4274-bb09-30ce21e18961",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "05741eb5-e9b1-4b02-80d5-0ec53323abab",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Group",
							"id": "03f0ab31-6abe-48af-abdb-2dd0e6466f31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"BKdKccNVOIq IcM 4921 6016 66 308 62265 PtDDwVfwO\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "66a35eb7-0fd9-4fa5-8755-e46fc0e05935",
									"name": "Update a group",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"BKdKccNVOIq IcM 4921 6016 66 308 62265 PtDDwVfwO\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "\"esse aute\""
								},
								{
									"id": "35b419c5-8cd2-4019-b3c7-fc213f447ced",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"BKdKccNVOIq IcM 4921 6016 66 308 62265 PtDDwVfwO\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b44af18a-8f37-428e-a53a-4a7ca1ed97ca",
									"name": "Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"BKdKccNVOIq IcM 4921 6016 66 308 62265 PtDDwVfwO\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Group",
							"id": "9377bc60-9d7a-43fd-aba3-2d2e0012a8ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
							},
							"response": [
								{
									"id": "edfce759-baa5-43f8-8842-362ba093f3db",
									"name": "Delete group",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "58f37e84-09d0-40c0-b086-7fbb1cffc789",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b477137f-f5a3-4f3b-b2be-49659affce70",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Owner",
							"id": "6e746d3c-67fd-49bf-bf22-ab3f6dde50d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"owner"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "df953319-3a07-44fb-8059-cde4c2b5dfdc",
									"name": "Get group owner",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"Ve1SJkEdbx3R@rYxuJoSUHvcwSNXNGD.bmb\",\n  \"first_name\": \"fugiat qui magna ex ullamco\",\n  \"last_name\": \"aute ad in sint\"\n}"
								},
								{
									"id": "7d40033c-8352-4a97-9b38-8ed67b281f57",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f47e518d-fb0f-4746-b623-1646015530c0",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Admins",
							"id": "a10ef6cc-f3b4-490c-9ed4-7c019afe1595",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/admins/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"admins",
										""
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "6587b827-6342-4630-ad92-3a3dc1aca9e8",
									"name": "Get list of group administrators",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "f1ddfbc8-0eb7-4c10-938e-b3e925de21c3",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "cdfca230-9c77-4d20-8e7e-091050481a5d",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Users",
							"id": "153f081d-c87c-4113-a4ba-984e1b73cc17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"users"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "d8e46de6-83eb-4a65-aea1-50b61cd5ebb4",
									"name": "Get group members",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "5b04f180-66dd-4f85-b0e8-e1258873194c",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b7a0763e-71ba-4365-99a0-dce366fb8ef7",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "349ac77d-99b5-4ac7-b5b6-0a556f139376"
				},
				{
					"name": "List Groups",
					"id": "30e8f71c-60f6-497f-8ec9-5e26abb86921",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							],
							"query": [
								{
									"key": "group_name",
									"value": "<string>"
								},
								{
									"key": "member_data",
									"value": "<string>"
								}
							]
						},
						"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
					},
					"response": [
						{
							"id": "09d19f9c-12c3-447b-9d7f-15db2f61f83a",
							"name": "List all groups",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "69a8f070-4b81-4f6d-bbe5-5278e343cd05",
							"name": "Not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "89346e6d-bfe8-4c71-99f8-0a21c9cba57d",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"e\",\n        \"officia adipisicing\"\n      ],\n      \"msg\": \"laborum sunt\",\n      \"type\": \"dolor\"\n    },\n    {\n      \"loc\": [\n        \"aliqua anim veniam\",\n        \"cillum aute aliquip\"\n      ],\n      \"msg\": \"Excepteur aute ea mollit officia\",\n      \"type\": \"sit\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Group",
					"id": "85e39ef4-17cd-4379-9118-a172dfdcd51e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							]
						},
						"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
					},
					"response": [
						{
							"id": "7f3405af-be28-488f-aa64-168182f0735b",
							"name": "Create new group",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"name\": \"sint commodo\",\n  \"message\": \"Group created successfully\"\n}"
						},
						{
							"id": "e6378092-286d-4bf4-b4a8-1c7e225fb2e0",
							"name": "Not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f15929bc-ef1f-41de-8944-a8f1697fa6db",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "f80608b2-b8a4-4913-bdf5-d2852da2de72"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "me",
					"item": [
						{
							"name": "Users:Current User",
							"id": "b75417a2-9dcd-4507-9d4d-788f23594105",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "1cff6713-85a8-4f5a-9b0e-14c59fdb199c",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "6ed4b01b-c6e7-41e9-801c-15dbb6553a65",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete User",
							"id": "b1f560ea-7406-4c37-9d48-8e27c23de021",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								},
								"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
							},
							"response": [
								{
									"id": "0bc28e01-7d6f-43d9-afb0-544bbaa1816c",
									"name": "The account has been deleted",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7db7065e-579a-42c7-87ec-70bfd07004c6",
									"name": "User not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "a0bc684a-8ab4-40d9-a120-147ba894b90a",
									"name": "User was not deleted",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Users:Patch Current User",
							"id": "d980b606-ed9a-48a7-a1e6-574134d709c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "b63a612a-93fa-45f7-8062-a4640b83ebd8",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "17d450b6-f12e-414f-a35c-e7b3169eaac3",
									"name": "Bad Request",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "f0127c81-fdc1-46a2-8d33-bdfa22e87997",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "cb6f509a-2859-41f4-a941-bf4e2578dc4a",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a5416ec7-44e0-4cb2-b4ff-f91cead64a09"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Users:User",
							"id": "752557bd-fe5c-44a3-bb56-69793ac5da2f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "4bf4997d-a949-4de9-beec-ac2cf0642486",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "b29e209d-8312-41c1-ab60-5663c044a8be",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "102f983c-4a28-4eeb-97d9-585d79d4af5d",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "47fb7ee4-97c8-4477-8e3f-d08f9f5e4364",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4d745e10-d80c-4d9d-850a-6c7151e0c2d4",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Delete User",
							"id": "21075b71-ed9c-4092-a3ad-b67a751c3211",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "e8fa7029-c2ab-4ed1-b1b3-3defac3829e6",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "c9c869f1-aedc-4443-9c21-80445cef6cb3",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "9e526305-314d-480c-86dc-0c9e4e863ff9",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "3b2c1d83-c214-46c9-8285-c866e90e82c9",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "3e377ee2-cfdb-4feb-bb4c-676508d908b4",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Patch User",
							"id": "3964e995-ad48-4ab0-93ed-2024d7495313",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "1ea2b82e-3695-4d9f-82fb-7968c698d037",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "5cc4b3bd-a233-4b64-8371-0e397fe3f4b3",
									"name": "Bad Request",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "2347f06d-4713-44a2-adfd-ad14e8dfb241",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ab57f94f-57fa-4d70-b8c1-44e3d02cdc5d",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f1f78b8f-a295-419c-af32-36a9b989c31c",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "b411c13d-6ebd-4a6e-a7e5-e62465bc97ae",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "a8b1dfff-785d-436f-b36a-a7352ca9e910"
				},
				{
					"name": "List My Groups",
					"id": "e5301974-eaeb-4afa-a381-6d41a8290b7e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"groups"
							]
						},
						"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
					},
					"response": [
						{
							"id": "e23af93c-3df8-4fec-aaba-a573474c835f",
							"name": "List of groups.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									]
								},
								"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "45b105d7-3842-4c96-a440-fa1465a36df9",
							"name": "User not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									]
								},
								"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List User Groups",
					"id": "b8d11f92-e9fa-4f95-a776-df70d00593ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:user_id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user_id",
								"groups"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
					},
					"response": [
						{
							"id": "37eec743-3398-4ff0-90c4-af2117ecece4",
							"name": "List of groups.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "3c8a52d8-c635-43be-ab9f-d1354c67f699",
							"name": "User not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "c21d8e7b-7598-4416-abea-8bccf7296356",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "8ccfd95b-63bc-4d07-8525-22c772a9cb3d"
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "jwt",
					"item": [
						{
							"name": "Auth:Jwt.Login",
							"id": "dd353421-ffca-4092-86a3-986518831c4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "grant_type",
											"value": "<string>"
										},
										{
											"key": "scope",
											"value": ""
										},
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "client_secret",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"login"
									]
								}
							},
							"response": [
								{
									"id": "ffd852fa-cbca-43dd-af96-ba31852b139d",
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI\",\n  \"token_type\": \"bearer\"\n}"
								},
								{
									"id": "a7b6369f-269c-4f69-806b-2489e98df316",
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"LOGIN_BAD_CREDENTIALS\"\n}"
								},
								{
									"id": "fab2b233-b93a-47b1-9d64-6fd800fab1d5",
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Auth:Jwt.Logout",
							"id": "b3b70b87-b349-41ff-90fe-a81309f709af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"logout"
									]
								}
							},
							"response": [
								{
									"id": "e383c637-2e6d-4186-b1b1-4ddb22531eb0",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "558e0b27-5012-4436-be54-ad9e9acd09bb",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "622e3b94-b2a2-4af8-9682-86fe68bc7bc4"
				},
				{
					"name": "Register:Register",
					"id": "59eaaf32-662f-4f05-a6ce-b149cb418422",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"id": "61dd48b4-2fb3-4413-aea0-238cd6d02c23",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "4c0a87bd-3e6b-48f6-9eb1-a295724d58f1",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"REGISTER_USER_ALREADY_EXISTS\"\n}"
						},
						{
							"id": "6001a8b4-9ba5-4880-96bb-55e4661e1b95",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Forgot Password",
					"id": "98d606ec-faf4-431f-8095-b7c9d0598948",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"response": [
						{
							"id": "9c13c652-9e3a-4c75-93a5-74d0f47d2cb7",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "83a642fc-3142-469d-843f-e48d79c14cc5",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Reset Password",
					"id": "5f619938-e72b-4912-8c1e-c3992fee438d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"response": [
						{
							"id": "cff850e7-a10c-4a38-89d9-0e2a4f4b0b37",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "4d491572-eb2e-4cbf-ad2b-5d3c7d9d98a6",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"RESET_PASSWORD_BAD_TOKEN\"\n}"
						},
						{
							"id": "44d4ff79-e979-49e5-9b41-6a60af31e29a",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Request-Token",
					"id": "52647467-f93c-48f2-a23f-7f2738b7c4de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/request-verify-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"request-verify-token"
							]
						}
					},
					"response": [
						{
							"id": "3daa26dc-0cff-46fb-97e6-d452db4b8ad7",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "8dff4946-2687-48c8-be5c-d6b4eebd085a",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Verify",
					"id": "90cf4b05-5c5d-41d1-a198-0f4a42092335",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"verify"
							]
						}
					},
					"response": [
						{
							"id": "0b108505-99bc-4484-9f6b-de66d9d9bcf1",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"AbvpFyHzCWi6zOr@jNqhmzNOuSIUFPgQgXjkapzFqCYZcQL.uu\",\n  \"first_name\": \"cillum adipisicing aliqua\",\n  \"last_name\": \"nulla amet anim\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "395dcb29-9258-4319-99c8-e909dcbe051c",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"VERIFY_USER_BAD_TOKEN\"\n}"
						},
						{
							"id": "bad222d1-0c9f-4d8b-9bac-fe368ee80e4f",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"elit commodo a\",\n        \"veniam elit\"\n      ],\n      \"msg\": \"qui reprehenderit\",\n      \"type\": \"quis ad aliqua\"\n    },\n    {\n      \"loc\": [\n        \"laboris dolor sit dolor\",\n        \"ullamco\"\n      ],\n      \"msg\": \"culpa esse magna\",\n      \"type\": \"Duis\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "54dc81d6-0849-467d-83be-1861195b2051"
		}
	],
	"variable": [
		{
			"id": "547fafd1-eee9-4b4f-a75c-c049c1a899cc",
			"key": "baseUrl",
			"value": "/"
		}
	]
}