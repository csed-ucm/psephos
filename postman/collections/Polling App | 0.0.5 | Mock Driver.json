{
	"info": {
		"_postman_id": "54818a57-d701-44bd-990b-eb2c3d77c4f6",
		"name": "Polling App | 0.0.5 | Mock Driver",
		"description": "A REST API to manage users and polls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19614303-54818a57-d701-44bd-990b-eb2c3d77c4f6"
	},
	"item": [
		{
			"name": "groups",
			"item": [
				{
					"name": "{group_id}",
					"item": [
						{
							"name": "members",
							"item": [
								{
									"name": "Get Group Members",
									"id": "f13e7d24-0408-4727-8cda-e21cd2ba1980",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
									},
									"response": [
										{
											"id": "225cc9b5-693b-41a5-9e3e-033bed121a85",
											"name": "Get group members",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
										},
										{
											"id": "55a6937f-a034-4a42-a103-bc4c849fca6b",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "b85e16b7-febd-43aa-8df9-83aebb09267d",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get list of group users Returns the list of group members with role. The user must be a member of the group or a superuser to access this endpoint.\n### Body **member**: list of members and their roles. Check the example for more details."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add User To Group",
									"id": "78b5a56a-a181-4102-8b40-1c424dd9c209",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"members"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
									},
									"response": [
										{
											"id": "25cc4fd7-dddf-4722-9534-69ba2a24e077",
											"name": "Add user(s) to a group",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "4cfce67b-e4e2-4667-952e-e49e740406c1",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "9bb282f7-4d9a-41e5-a1e6-d63f27b595e9",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    },\n    {\n      \"email\": \"<email>\",\n      \"id\": {},\n      \"is_active\": true,\n      \"is_superuser\": false,\n      \"is_verified\": false,\n      \"role\": \"user\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"members"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Add member(s) to a group. This route adds a user or multiple users to a group with a specified role. The front-end application must do validation to ensure that the user exists in the database        and is not already a member of the group. This function also does the same validation checks; However, no users will be added if any error occurs.\n### Parameters **group_id**: The id of the group to update.\n### Body The function takes a list of JSON objects(Models) with email of the new user and the role(privilege level) in the group. Check the example for more details.\nPossible outcomes: - The function will return a list of emails of users that were not found in the database. - The function will return an error if a user is already a member of the group - The function will successfully add the users to the group"
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "242a3b2e-b87b-4c63-97f5-7771a769886b"
						},
						{
							"name": "member/{user_id}",
							"item": [
								{
									"name": "Get Member Details",
									"id": "386c251a-3d19-4125-9e90-0f92aef29441",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
									},
									"response": [
										{
											"id": "e96d8e9f-c022-4726-bfae-97cde21c8e53",
											"name": "Get member details",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "bcb20416-3022-4da8-b553-a9308ee150ff",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "6dabbbe2-671a-4f33-a25f-8a933165d1e5",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Get member details Returns the details of a member of a group. The user must be a member of the group or a superuser to access this endpoint."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove Member",
									"id": "9db0bdf3-c619-4e72-809c-fdebe80d60a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
									},
									"response": [
										{
											"id": "ab747ef8-ab82-479d-8b27-5e867343c1ea",
											"name": "Remove a member from a group",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "30565222-1ec9-431c-87a7-5a5cabffb51c",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "291c48ce-6046-4870-9361-53cbebcfd14a",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Remove a member from a group This route removes a member from a group. The user must be an admin of the group to remove a member. The owner of the group cannot be removed. The user cannot remove themselves from the group. (subject to change in the future)"
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Promote User",
									"id": "8ebf94a3-843d-4c46-be36-543ca779cfaa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "password_credentials",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"member",
												":user_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
									},
									"response": [
										{
											"id": "f61919f0-3268-456f-aa04-53cc31e8aaf0",
											"name": "Promote a member to admin",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"id": "a855f6ac-ee1e-4bba-95fc-784278ad32f5",
											"name": "Not found",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain",
													"enabled": true
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "4660903f-89d2-42b1-890b-9c17624f31ba",
											"name": "Validation Error",
											"originalRequest": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"type": "any"
														},
														{
															"key": "addTokenTo",
															"type": "any"
														},
														{
															"key": "callBackUrl",
															"type": "any"
														},
														{
															"key": "authUrl",
															"type": "any"
														},
														{
															"key": "accessTokenUrl",
															"value": "auth/jwt/login",
															"type": "string"
														},
														{
															"key": "clientId",
															"type": "any"
														},
														{
															"key": "clientSecret",
															"type": "any"
														},
														{
															"key": "clientAuth",
															"type": "any"
														},
														{
															"key": "grantType",
															"type": "any"
														},
														{
															"key": "scope",
															"type": "any"
														},
														{
															"key": "username",
															"type": "any"
														},
														{
															"key": "password",
															"type": "any"
														},
														{
															"key": "tokenType",
															"type": "any"
														},
														{
															"key": "redirectUri",
															"type": "any"
														},
														{
															"key": "refreshToken",
															"type": "any"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:group_id/member/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":group_id",
														"member",
														":user_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "## Promote or demote a group member This route promotes a member with a user privilege to an admin or demotes an admin to a regular user. The owner of the group cannot be demoted. The user must be an admin of the group to promote or demote a member. If the user new role, specified in the body, is the same as the current role,         the function will return success but will not change the role."
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"enabled": true
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "0cb7e0f3-dcc6-4774-a7bc-a5de600ab4d5"
						},
						{
							"name": "Get Group",
							"id": "e2e1d0ac-410a-4cb4-b4b8-327b8141e56e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
							},
							"response": [
								{
									"id": "12f91340-a116-4103-95ee-fbf623dccbe7",
									"name": "Get group by id",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Example Group\",\n  \"description\": \"This is an example group\",\n  \"owner_name\": \"John Doe\",\n  \"owner_email\": \"jdoe@example.com\"\n}"
								},
								{
									"id": "b27ef2eb-96e1-4c79-8ee7-26f952b72d35",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "039a672a-0cd5-4df1-b98b-5d7b160365ec",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group by id This endpoint returns the group's information if the user is a member of the group:            the group's name, description, and owner information.\n### Parameters **group_id**: The id of the group to get."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Group",
							"id": "a396b97a-8825-4f27-bef3-d920c1f468ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"OnXErwhIuk MBtfE EKKgxAPiqz NAI 6649032\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "cbbbfaec-593f-47a6-b824-67bf64945503",
									"name": "Update a group",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"OnXErwhIuk MBtfE EKKgxAPiqz NAI 6649032\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "\"enim proident est irure ipsum\""
								},
								{
									"id": "d4b63f42-f61e-4935-a2a0-5a58bd10cd62",
									"name": "Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"OnXErwhIuk MBtfE EKKgxAPiqz NAI 6649032\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "206e9c2c-77e3-4a1f-b407-fda9ac7311ea",
									"name": "Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"name\": \"OnXErwhIuk MBtfE EKKgxAPiqz NAI 6649032\",\n \"description\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Update a group Updates a group's information if the user is the owner of the group.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Group",
							"id": "ac7bfc8f-4499-4f60-85db-76d1c914ba75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
							},
							"response": [
								{
									"id": "3954b243-4141-410b-85d0-6787a9c8a9c5",
									"name": "Delete group",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "198bca03-acf6-4611-bb2f-43f03d01f5ae",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "a73b1c9a-dd12-4dc1-abee-465047788e54",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Delete a group Deletes a group if the user is the owner of the group. The group is also removed from the user's groups list.\n### Parameters **group_id**: The id of the group to delete."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Owner",
							"id": "7288d17d-cc0d-4882-87bd-cded2f954b60",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"owner"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "330b44fc-6eac-40ab-9118-293ed9dd0b3e",
									"name": "Get group owner",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"ssI4b5@jOyujKAnYzAXhwRzFxXnTEJGpgsYRj.ger\",\n  \"first_name\": \"ea culpa eiusmod aliqua\",\n  \"last_name\": \"proident minim exercitation commodo\"\n}"
								},
								{
									"id": "5559aa86-046a-485c-9ad6-b353b3180cd5",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "1e7ab4bd-4dc8-4eb6-b382-b481ae54902d",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/owner",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"owner"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get group owner Returns the owner of the group if the user is a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Admins",
							"id": "5a8a8559-eb8a-4116-a39d-c8959ace631d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/admins/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"admins",
										""
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "00270840-a89d-4e8a-a459-477764b15145",
									"name": "Get list of group administrators",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "b6b7d528-d2d6-4070-987c-f26341a68795",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4ebb8085-608c-4408-a05d-004112854522",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/admins/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"admins",
												""
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group admins Returns the list of group members with admin privilege. The user must be a member of the group or a superuser.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Group Users",
							"id": "6ab600e5-98f8-48e0-b083-a81fa8978948",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:group_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":group_id",
										"users"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
							},
							"response": [
								{
									"id": "1a80e9b9-db7f-42d2-9a67-4ecffb993d36",
									"name": "Get group members",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    {\n      \"email\": \"jdoe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"email\": \"jsmith@example.com\",\n      \"first_name\": \"Jack\",\n      \"last_name\": \"Smith\",\n      \"role\": \"user\"\n    }\n  ]\n}"
								},
								{
									"id": "8c15e915-a108-4e96-a42f-06e887819802",
									"name": "Not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "98fb09ff-4ef2-407e-ba7d-b9002cf3c437",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/groups/:group_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "## Get list of group users Returns the list of group members with user only privilege. The user must be a member of the group or a superuser to access this endpoint.\n### Parameters **group_id**: The id of the group to update."
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "802d6697-c807-4a1d-a1de-bf20a531aaf3"
				},
				{
					"name": "List Groups",
					"id": "d3b99c1d-6581-4cc9-b662-a0df51ce17a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							],
							"query": [
								{
									"key": "group_name",
									"value": "<string>"
								},
								{
									"key": "member_data",
									"value": "<string>"
								}
							]
						},
						"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
					},
					"response": [
						{
							"id": "0c4c8b28-ed41-407f-b2e2-eb60a699f5da",
							"name": "List all groups",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "acefef45-2e88-4525-ba0b-8516790e2da4",
							"name": "Not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "6f5cba7c-e251-49a8-a294-27b6b34fa817",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/?group_name=<string>&member_data=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									],
									"query": [
										{
											"key": "group_name",
											"value": "<string>"
										},
										{
											"key": "member_data",
											"value": "<string>"
										}
									]
								},
								"description": "## List all groups that the user is a member of. This endpoint can be used to search for groups by name or by member. This might be replaces later with a more robust search endpoint combined             with a simple GET endpoint for listing all groups from search. Returns a list of groups that match the search criteria. If no groups are found, an empty list is returned.\n### Parameters User can pass in a group name and/or a member's information to search for. If no parameters are passed in, all groups that the user is a member of will be returned. If user is a superuser, all groups in the database will be returned.\n**group_name**: The name of the group to search for. **member_data**: Either email or User id of the member to search for."
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ut\",\n        \"Ut ex pariatur reprehenderit irure\"\n      ],\n      \"msg\": \"in dolor aliqua\",\n      \"type\": \"enim do\"\n    },\n    {\n      \"loc\": [\n        \"cupidatat incididunt dolor nulla\",\n        \"aliquip sed\"\n      ],\n      \"msg\": \"deserunt proident elit\",\n      \"type\": \"deserunt elit consectetur\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Group",
					"id": "9306fc97-cccb-422e-a54c-d1dc12143845",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							]
						},
						"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
					},
					"response": [
						{
							"id": "6b27e280-2120-4f9a-8948-1aea7ec8d083",
							"name": "Create new group",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"name\": \"Lorem nisi ullamco ea mollit\",\n  \"message\": \"Group created successfully\"\n}"
						},
						{
							"id": "c04d1710-351d-4ba1-acbd-a5eb2bd61f7b",
							"name": "Not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "33cf97a0-8d50-4bcf-b50f-c9a1a0ffbf45",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"name\": \"Group 01\",\n \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								},
								"description": "## Create a new group This endpoint creates a new group with the user as the owner, admin, and member. If the group is successfully created, the group's information is returned.\n### Parameters **name**: The name of the group. Must be unique(per user). **description**: A short description of the group."
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "140cfcc0-fcc1-48d8-9824-47b519ea630f"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "me",
					"item": [
						{
							"name": "Users:Current User",
							"id": "374beb41-c646-4497-be28-fb5ee33b57d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "e0c9742b-8fab-4a7f-a3db-962696752f59",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "9f88745d-5973-4f15-95e4-472497b59acb",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete User",
							"id": "0aa87877-8fbb-4402-ace5-1097ada6ae86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								},
								"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
							},
							"response": [
								{
									"id": "cbe5b79b-43de-447a-b1e8-281d2c43043b",
									"name": "The account has been deleted",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "38a020f1-f8cc-4500-9af0-284eb96272f3",
									"name": "User not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "86eeb39a-d286-423b-a556-8ae783d25428",
									"name": "User was not deleted",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										},
										"description": "## Delete current user account\nThis route deletes the account of the currently logged in user.\n### Request body\n- **user** - User object\n### Expected Response\n**204** - *The account has been deleted*"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Users:Patch Current User",
							"id": "1e25a27e-6b0c-4eb8-9761-96bb445508d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": [
								{
									"id": "4ff381aa-e90f-4072-bec1-7cdb3f3268bc",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "1c6cf20b-5a3e-4a43-9155-92a42e5fb804",
									"name": "Bad Request",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "073d7119-12c6-4153-9b3c-9a0074ac1463",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "cdd5e1f5-a830-4aa9-954e-29f682c8bad0",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "2392a275-7d5b-4622-abc2-ddf2906a6bc4"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Users:User",
							"id": "abbcf5be-dd7c-4941-94f7-ff42edf227e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "5b21b628-6680-4228-967a-933c48d4e113",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "d1ff7760-6505-45bf-aa96-ce157920e312",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "246ad6f5-b7d4-4240-bca7-35d4f084de46",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "e58abb39-9a31-4b19-ab7b-288e98929194",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "23cc9c95-5e51-4dfd-ac55-140e127ca9ca",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Delete User",
							"id": "191c8663-3496-46a7-bffa-f07a9676b8be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "ec4b8c41-79b6-4eef-8347-b349528c766f",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0b463b59-5527-4d9b-a3a9-fc20882debc1",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "3391f926-512b-4812-9efc-9aa49a619ed5",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4293ed5c-d6e9-4c73-a263-e8b4f2604402",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "69aabe89-a628-4ded-a8db-df419ed66543",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Users:Patch User",
							"id": "9ef140a1-aa93-451b-9389-4dbddc25e578",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"id": "38338fd4-9b38-4eb3-a01c-0942cb5597d9",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
								},
								{
									"id": "05660f6f-9735-4f91-b82c-450f7fe5c51f",
									"name": "Bad Request",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}"
								},
								{
									"id": "eada43d2-f906-4d83-aea0-67bd4eddc2c5",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "961514b8-b982-4e91-afa1-fb75ca6e10f1",
									"name": "Not a superuser.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "01379761-a33d-4745-9981-1420b7426768",
									"name": "The user does not exist.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "c02299c0-4fba-4120-b40a-f50526989e28",
									"name": "Validation Error",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"email\": \"<email>\",\n  \"is_active\": \"<boolean>\",\n  \"is_superuser\": \"<boolean>\",\n  \"is_verified\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "43b8ddb3-6ae3-4c4b-be08-54ba0dd435fd"
				},
				{
					"name": "List My Groups",
					"id": "1ec1f4fb-5422-4ee4-83a7-834aecaff849",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"groups"
							]
						},
						"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
					},
					"response": [
						{
							"id": "384a97c0-8eba-4747-a499-ef5a6fbef83a",
							"name": "List of groups.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									]
								},
								"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "292bbcd7-362e-4577-a9e0-0797935e5fab",
							"name": "User not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"groups"
									]
								},
								"description": "## Get current user groups\nThis route returns all groups that currently logged in user is a member of,         with the user's role in that group."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List User Groups",
					"id": "028399d5-39c2-4697-acf9-a642c1b46b2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "auth/jwt/login",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:user_id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user_id",
								"groups"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
					},
					"response": [
						{
							"id": "130f0c4f-f2bc-4ddd-8c63-adb379ddc9d1",
							"name": "List of groups.",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    },\n    {\n      \"name\": \"Group 01\",\n      \"role\": \"user\"\n    }\n  ]\n}"
						},
						{
							"id": "7f5817de-be0a-4cdf-bfb9-830cf87513e2",
							"name": "User not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain",
									"enabled": true
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "70177900-5775-4e31-b0ad-d9e5dd70d66c",
							"name": "Validation Error",
							"originalRequest": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"type": "any"
										},
										{
											"key": "addTokenTo",
											"type": "any"
										},
										{
											"key": "callBackUrl",
											"type": "any"
										},
										{
											"key": "authUrl",
											"type": "any"
										},
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "clientId",
											"type": "any"
										},
										{
											"key": "clientSecret",
											"type": "any"
										},
										{
											"key": "clientAuth",
											"type": "any"
										},
										{
											"key": "grantType",
											"type": "any"
										},
										{
											"key": "scope",
											"type": "any"
										},
										{
											"key": "username",
											"type": "any"
										},
										{
											"key": "password",
											"type": "any"
										},
										{
											"key": "tokenType",
											"type": "any"
										},
										{
											"key": "redirectUri",
											"type": "any"
										},
										{
											"key": "refreshToken",
											"type": "any"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id",
										"groups"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "## Delete current user account\nThis route, finds user by provided id, or raises a HTTP exception (User not found). If user is found, lists all groups that a user is a member of, with the user's role in that group.\n### Request Query Parameters\n**user_id**: id of the user whose groups are to be listed"
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "082674c7-f5c4-4a45-ac55-1a5d13640f3a"
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "jwt",
					"item": [
						{
							"name": "Auth:Jwt.Login",
							"id": "fec4366a-18f5-45d8-b831-2978d1be1206",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "(Required) ",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "(Required) ",
											"key": "password",
											"value": "<string>"
										},
										{
											"key": "grant_type",
											"value": "<string>"
										},
										{
											"key": "scope",
											"value": ""
										},
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "client_secret",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"login"
									]
								}
							},
							"response": [
								{
									"id": "44ecce13-c526-4046-8110-4bbf5c4b0541",
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI\",\n  \"token_type\": \"bearer\"\n}"
								},
								{
									"id": "846db39c-77dc-4e89-b902-9f1c63140d82",
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"LOGIN_BAD_CREDENTIALS\"\n}"
								},
								{
									"id": "20e913f3-add2-42c2-b2b3-b0f8cd718bd8",
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "(Required) ",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) ",
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"key": "scope",
													"value": ""
												},
												{
													"key": "client_id",
													"value": "<string>"
												},
												{
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"login"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Auth:Jwt.Logout",
							"id": "94e39a0c-f156-4ae3-a36d-5c0077b4ec43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "auth/jwt/login",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/jwt/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"jwt",
										"logout"
									]
								}
							},
							"response": [
								{
									"id": "73584ce3-6a86-4644-bc89-492503b48608",
									"name": "Successful Response",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"enabled": true
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"id": "4c31a84f-f736-4c83-8662-85ef18fc8079",
									"name": "Missing token or inactive user.",
									"originalRequest": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"type": "any"
												},
												{
													"key": "addTokenTo",
													"type": "any"
												},
												{
													"key": "callBackUrl",
													"type": "any"
												},
												{
													"key": "authUrl",
													"type": "any"
												},
												{
													"key": "accessTokenUrl",
													"value": "auth/jwt/login",
													"type": "string"
												},
												{
													"key": "clientId",
													"type": "any"
												},
												{
													"key": "clientSecret",
													"type": "any"
												},
												{
													"key": "clientAuth",
													"type": "any"
												},
												{
													"key": "grantType",
													"type": "any"
												},
												{
													"key": "scope",
													"type": "any"
												},
												{
													"key": "username",
													"type": "any"
												},
												{
													"key": "password",
													"type": "any"
												},
												{
													"key": "tokenType",
													"type": "any"
												},
												{
													"key": "redirectUri",
													"type": "any"
												},
												{
													"key": "refreshToken",
													"type": "any"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/jwt/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"jwt",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain",
											"enabled": true
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "b403171b-ecc4-47a7-bebe-44132890fd2e"
				},
				{
					"name": "Register:Register",
					"id": "9c1b1ca6-6779-4cc9-814b-0fa9aa901ebd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"id": "abe48366-d68b-470f-be65-91f13300b954",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "4cfaea29-a009-4a54-9e71-a59582a85378",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"REGISTER_USER_ALREADY_EXISTS\"\n}"
						},
						{
							"id": "30fb98d7-f403-4959-9126-c24fb0e040a0",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"email\": \"<email>\",\n \"password\": \"<string>\",\n \"is_active\": true,\n \"is_superuser\": false,\n \"is_verified\": false,\n \"first_name\": \"John\",\n \"last_name\": \"Smith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Forgot Password",
					"id": "3e9dfbf3-8ad6-41db-a23d-4d0ae499e093",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"forgot-password"
							]
						}
					},
					"response": [
						{
							"id": "c69056a8-f121-4696-a2b0-119ba4b3b78f",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "a209619c-3de3-487e-afd9-ecc291165e87",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Reset:Reset Password",
					"id": "856ed425-1502-4b44-b9cf-b3cd257e6bbd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"reset-password"
							]
						}
					},
					"response": [
						{
							"id": "fa2f420b-4936-44a4-adcb-4785dab62fa0",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "5ecde79d-0195-42c9-b7b3-fe8faf5b0481",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"RESET_PASSWORD_BAD_TOKEN\"\n}"
						},
						{
							"id": "f8f33866-5bb6-4508-87c2-101788edfc65",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Request-Token",
					"id": "47f4f564-b6a0-4494-a7d0-0eb6bf34930a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/request-verify-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"request-verify-token"
							]
						}
					},
					"response": [
						{
							"id": "dab36f41-b499-4589-8cb9-2cbb6b2293ac",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "fc1c706d-a387-435f-93ff-68ff476ca203",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/request-verify-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"request-verify-token"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Verify:Verify",
					"id": "1489c11c-d22e-4cd9-ae0c-8c2e125a1604",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"verify"
							]
						}
					},
					"response": [
						{
							"id": "880a8a8d-fa85-4800-8dee-0e8bec89160f",
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"5eb7cf5a86d9755df3a6c593\",\n  \"email\": \"qogx2qLhhK@vEVabMIJJeWoqgLt.ay\",\n  \"first_name\": \"dolore exercitation incididunt enim Excepteur\",\n  \"last_name\": \"sit incididunt adipisicing ex\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false\n}"
						},
						{
							"id": "8717995f-5b42-4ae4-a615-94f2e91420f6",
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"VERIFY_USER_BAD_TOKEN\"\n}"
						},
						{
							"id": "39f9106f-3e15-4065-853a-bc90e5b7c79b",
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"verify"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"enabled": true
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"ea\",\n        \"eiusmod sunt velit\"\n      ],\n      \"msg\": \"in dolor quis cillum\",\n      \"type\": \"ipsum ut sint\"\n    },\n    {\n      \"loc\": [\n        \"consequ\",\n        \"deserunt fugiat aute occaecat pariatur\"\n      ],\n      \"msg\": \"in aute consectetur eiusmod\",\n      \"type\": \"culpa deserunt minim voluptate dolor\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "7a081837-6013-4240-9a37-65bac72d195a"
		}
	],
	"variable": [
		{
			"id": "21df3ded-f1d7-49d4-9c9c-5d720af6e4fc",
			"key": "baseUrl",
			"value": "/"
		}
	]
}